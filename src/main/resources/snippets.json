{
  "Headers": "set colsep '|'\n set feedback off\n set linesize 1000\n set pagesize 0\n set sqlprompt ''\n set trimspool on\n set headsep off\n SET SERVEROUTPUT ON\n",
  "Basic Select": "SELECT * FROM table_name;",
  "Select with Where": "SELECT * FROM table_name WHERE column_name = value;",
  "Insert": "INSERT INTO table_name (column1, column2) VALUES (value1, value2);",
  "Update": "UPDATE table_name SET column_name = value WHERE condition;",
  "Delete": "DELETE FROM table_name WHERE condition;",
  "Create Table": "CREATE TABLE table_name (column1 datatype, column2 datatype);",
  "Drop Table": "DROP TABLE table_name;",
  "Create Index": "CREATE INDEX index_name ON table_name (column_name);",
  "Function": "CREATE FUNCTION function_name\n  RETURN return_datatype\nIS\n  -- Declaraciones\nBEGIN\n  -- Código\nEND;",
  "Procedure": "CREATE PROCEDURE procedure_name\nIS\n  -- Declaraciones\nBEGIN\n  -- Código\nEND;",
  "Cursor": "DECLARE cursor_name CURSOR FOR SELECT * FROM table_name;\nOPEN cursor_name;\nFETCH cursor_name INTO variable_name;\nCLOSE cursor_name;",
  "If Statement": "IF condition THEN\n  -- Código\nELSIF condition THEN\n  -- Código\nELSE\n  -- Código\nEND IF;",
  "Loop": "LOOP\n  -- Código\nEXIT WHEN condition;\nEND LOOP;",
  "For Loop": "FOR i IN 1..10 LOOP\n  -- Código\nEND LOOP;",
  "While Loop": "WHILE condition LOOP\n  -- Código\nEND LOOP;",
  "Try-Catch": "BEGIN\n  -- Código\nEXCEPTION\n  WHEN exception_name THEN\n    -- Manejar excepción\nEND;",
  "Commit": "COMMIT;",
  "Rollback": "ROLLBACK;",
  "Savepoint": "SAVEPOINT savepoint_name;",
  "Set Transaction": "SET TRANSACTION READ WRITE;",
  "Call Procedure": "CALL procedure_name(parameters);",
  "Create View": "CREATE VIEW view_name AS SELECT column1, column2 FROM table_name WHERE condition;",
  "Create Sequence": "CREATE SEQUENCE sequence_name START WITH 1 INCREMENT BY 1;",
  "Fetch Sequence": "SELECT sequence_name.NEXTVAL FROM DUAL;",
  "Create Trigger": "CREATE TRIGGER trigger_name\nBEFORE INSERT ON table_name\nFOR EACH ROW\nBEGIN\n  -- Código\nEND;",
  "Create Package": "CREATE PACKAGE package_name AS\n  -- Declaraciones\nEND package_name;\n/\nCREATE PACKAGE BODY package_name AS\n  -- Implementación\nEND package_name;",
  "Begin-End Block": "BEGIN\n  -- Código\nEND;",
  "Declare Section": "DECLARE\n  variable_name datatype := value;\nBEGIN\n  -- Código\nEND;",
  "For Each Loop": "FOR record_name IN (SELECT * FROM table_name) LOOP\n  -- Código\nEND LOOP;",
  "Select Into": "SELECT column_name INTO variable_name FROM table_name WHERE condition;",
  "Create or Replace Procedure": "CREATE OR REPLACE PROCEDURE procedure_name\nIS\n  -- Declaraciones\nBEGIN\n  -- Código\nEND;",
  "Create or Replace Function": "CREATE OR REPLACE FUNCTION function_name\n  RETURN return_datatype\nIS\n  -- Declaraciones\nBEGIN\n  -- Código\nEND;",
  "Anonymous Block": "BEGIN\n  -- Código\nEND;",
  "Exception Handling": "BEGIN\n  -- Código\nEXCEPTION\n  WHEN exception_name THEN\n    -- Manejar excepción\nEND;",
  "Case Statement": "CASE variable_name\n  WHEN value1 THEN\n    -- Código\n  WHEN value2 THEN\n    -- Código\n  ELSE\n    -- Código\nEND CASE;"
}